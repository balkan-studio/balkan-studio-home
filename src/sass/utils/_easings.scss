$easings: (
  Sine: (
    In: cubic-bezier(0.47, 0, 0.745, 0.715),
    Out: cubic-bezier(0.39, 0.575, 0.565, 1),
    InOut: cubic-bezier(0.445, 0.05, 0.55, 0.95)
  ),
  Quad: (
    In: cubic-bezier(0.55, 0.085, 0.68, 0.53),
    Out: cubic-bezier(0.25, 0.46, 0.45, 0.94),
    InOut: cubic-bezier(0.455, 0.03, 0.515, 0.955)
  ),
  Cubic: (
    In: cubic-bezier(0.55, 0.055, 0.675, 0.19),
    Out: cubic-bezier(0.215, 0.61, 0.355, 1),
    InOut: cubic-bezier(0.645, 0.045, 0.355, 1)
  ),
  Quart: (
    In: cubic-bezier(0.895, 0.03, 0.685, 0.22),
    Out: cubic-bezier(0.165, 0.84, 0.44, 1),
    InOut: cubic-bezier(0.77, 0, 0.175, 1)
  ),
  Quint: (
    In: cubic-bezier(0.755, 0.05, 0.855, 0.06),
    Out: cubic-bezier(0.23, 1, 0.32, 1),
    InOut: cubic-bezier(0.86, 0, 0.07, 1)
  ),
  Expo: (
    In: cubic-bezier(0.95, 0.05, 0.795, 0.035),
    Out: cubic-bezier(0.19, 1, 0.22, 1),
    InOut: cubic-bezier(1, 0, 0, 1)
  ),
  Circ: (
    In: cubic-bezier(0.6, 0.04, 0.98, 0.335),
    Out: cubic-bezier(0.075, 0.82, 0.165, 1),
    InOut: cubic-bezier(0.785, 0.135, 0.15, 0.86)
  ),
  Back: (
    In: cubic-bezier(0.6, -0.28, 0.735, 0.045),
    Out: cubic-bezier(0.175, 0.885, 0.32, 1.275),
    InOut: cubic-bezier(0.68, -0.55, 0.265, 1.55)
  ),
);

@function easing($type) {
  $type: to-lower-case($type);
  $rate: 0;
  $fn: 0;
  @if str-slice($type, 1, 5) == inout {
    $rate: InOut; 
    $fn: 6;
  }
  @else if  str-slice($type, 1, 2) == in {
    $rate: In; 
    $fn: 3;
  }
  @else if str-slice($type, 1, 3) == out {
    $rate: Out; 
    $fn: 4;
  } 
  @if $fn > 0 {
    $fn: to-upper-case(str-slice($type, $fn, $fn)) + str-slice($type, $fn+1);
    $cb: map-deep-get($easings, $fn, $rate);
    @return $cb;
  }
}

@mixin easing($easing: InOutQuart, $type: transition) {
  @if str-slice($type, 1, 1) == a {
    animation-timing-function: easing($easing); 
  }
  @else {
    transition-timing-function: easing($easing); 
  }
}	
